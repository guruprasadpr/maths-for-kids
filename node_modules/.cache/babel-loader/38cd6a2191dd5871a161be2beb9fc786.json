{"ast":null,"code":"var _jsxFileName = \"/home/guru/react/tuitions/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction Box1(props) {\n  return React.createElement(\"input\", {\n    class: \"box\",\n    value: props.val,\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  });\n}\n\nfunction ResBox(props) {\n  return React.createElement(\"input\", {\n    class: \"resbox\",\n    id: \"result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  });\n}\n\nconst validateResult = () => {\n  alert(this.state.result);\n};\n\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value1: getRandom(1, 9),\n      value2: getRandom(1, 9),\n      result: ''\n    };\n\n    this.validateResult = () => {\n      console.log(this.state.result);\n    };\n  }\n\n  //const [result,setCounter] = useState()\n  //const incrementCounter = (value1,value2) => setCounter(counter+incr)\n  //result = value1 + value2\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"VARDHAN G\"), React.createElement(\"form\", {\n      onSubmit: this.validateResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Box1, {\n      val: this.state.value1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Box1, {\n      val: \"+\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Box1, {\n      val: this.state.value2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Box1, {\n      val: \"=\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      class: \"resbox\",\n      value: this.state.result,\n      onChange: event => this.setState({\n        result: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })))));\n  }\n\n} //export default App;\n\n/*\nreturn (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Learn React\n      </a>\n    </header>\n  </div>\n);\n*/","map":{"version":3,"sources":["/home/guru/react/tuitions/src/App.js"],"names":["React","useState","Component","getRandom","min","max","Math","floor","random","Box1","props","val","ResBox","validateResult","alert","state","result","App","value1","value2","console","log","render","event","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,OAAO,WAAP;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AACzB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;AAED,SAASK,IAAT,CAAcC,KAAd,EAAoB;AAClB,SACE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,KAAK,EAAEA,KAAK,CAACC,GAAjC;AAAuC,IAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AAED,SAASC,MAAT,CAAgBF,KAAhB,EAAsB;AACpB,SACG;AAAO,IAAA,KAAK,EAAC,QAAb;AAAsB,IAAA,EAAE,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AAGD;;AAED,MAAMG,cAAc,GAAE,MAAM;AAC1BC,EAAAA,KAAK,CAAC,KAAKC,KAAL,CAAWC,MAAZ,CAAL;AACD,CAFD;;AAIA,eAAe,MAAMC,GAAN,SAAkBjB,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE/Ca,KAF+C,GAEvC;AACNG,MAAAA,MAAM,EAAGf,SAAS,CAAC,CAAD,EAAG,CAAH,CADZ;AAENgB,MAAAA,MAAM,EAAGhB,SAAS,CAAC,CAAD,EAAG,CAAH,CAFZ;AAGNa,MAAAA,MAAM,EAAG;AAHH,KAFuC;;AAAA,SAO/CH,cAP+C,GAO/B,MAAM;AACpBO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,MAAvB;AACD,KAT8C;AAAA;;AAU/C;AACA;AACC;AACAM,EAAAA,MAAM,GAAE;AACT,WACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAIJ;AAAO,MAAA,QAAQ,EAAE,KAAKT,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,KAAKE,KAAL,CAAWG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEG,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAGG,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,EAIG,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAKG;AAAO,MAAA,KAAK,EAAC,QAAb;AACO,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,MADzB;AAEO,MAAA,QAAQ,EAAEO,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAEO,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATH,EAUG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVH,CADJ,CAJI,CADF,CADA;AAuBA;;AArC+C,C,CAwCjD;;AAEA","sourcesContent":["import React, {useState, Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction getRandom(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction Box1(props){\n  return (\n    <input  class=\"box\" value={props.val}  readOnly  />\n  )\n}\n\nfunction ResBox(props){\n  return (\n     <input class=\"resbox\" id=\"result\"  />\n  )\n}\n\nconst validateResult =() => {\n  alert(this.state.result);\n}\n\nexport default class App extends React.Component {\n  //this.state = {value: ''};\n  state = {\n    value1 : getRandom(1,9),\n    value2 : getRandom(1,9),\n    result : ''\n  }\n  validateResult =() => {\n    console.log(this.state.result)\n  }\n  //const [result,setCounter] = useState()\n  //const incrementCounter = (value1,value2) => setCounter(counter+incr)\n   //result = value1 + value2\n   render(){\n  return (\n  <div className=\"App\">\n    <header className=\"App-header\">\n    <p>\n     VARDHAN G\n     </p>\n<form  onSubmit={this.validateResult}>\n    <div >\n       <Box1 val={this.state.value1}/>\n       <Box1 val=\"+\"/>\n       <Box1 val={this.state.value2}/>\n       <Box1 val=\"=\" />\n       <input class=\"resbox\"\n              value={this.state.result}\n              onChange={event => this.setState({result: event.target.value})}\n        />\n       <br/>\n       <input type=\"submit\" value=\"Submit\" />\n    </div>\n</form>\n     </header>\n  </div>\n   )\n }\n}\n\n//export default App;\n\n/*\nreturn (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Learn React\n      </a>\n    </header>\n  </div>\n);\n*/\n"]},"metadata":{},"sourceType":"module"}